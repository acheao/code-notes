git bash
mkdir file                       /**创建文件*/
git init                         /**创建版本库*/
ls -ah                           /**ls即list  -a是参数all h即hide*/
git add file.txt                 /**将file.txt放入版本库*/
git commit -m  "版本描述"        /**提交并写入说明*/
git status                       /**查看当前文件状态*/
git diff                         /**查看差异*/
git log --pretty=oneline         /**查看版本，参数--pretty=oneline*/
git reset --hard HEAD^           /**回滚上一版本*/
git reset --hard HEAD`100        /**返回上100版本*/
git reflog                       /**查看操作命令*/
git reset --hard 5005304         /**返回版本号5005304*/
git diff HEAD --file.txt         /**查看工作区和版本库的区别*/
git add file.txt                 /**将工作区添加到暂存区*/
git commit                       /**将暂存区添加到版本库*/
git diff HEAD --file.txt         /**查看工作区和版本库里面最新版本的区别*/
git checkout -- file.txt         /**撤销工作区的修改*/
git reset HEAD file.txt          /**可以把暂存区的修改撤销掉*/
rm file.txt                      /**删除文件file.txt*/
ssh-keygen -t rsa -C "273074720linchao@sina.com"    /**创建SSH Key*/
在github上面添加公匙
git remote add origin git@github.com:linisme/learn-git.git     /**建立远程仓库*/
git push -u origin master        /**推送到远端仓库，参数u将本地master和远端master建立连接，以后可以直                                  接推送*/
git push origin master           /**推送远端*/
git remote add origin git@server-name:path/repo-name.git  /**关联远程库*/
git clone git@github.com:linisme/repositories.git         /**从github仓库中克隆到本地*/
git checkout -b dev              /**创建分支dev，参数-b表示创建并切换*/
git branch dev                   /**创建分支dev*/
git checkout dev                 /**切换到分支dev*/
git merge dev                    /**把dev分支合并到当前分支，快速合并直接把当前分支指向dev分支*/
git branch -d dev                /**删除分支dev*/
git log --graph --pretty-oneline --abbrev-commit  /**查看分支合并图*/
git merge --no-ff-m "message of new branch" dev  /**合并分支但不删除分支，即禁用Fast forward*/
git stash                        /**把当前工作场所储存起来*/
git stash list                   /**查看储存的内容*/
git stash apply                  /**恢复储存内容，但stash内容并不删除*/
git stash drop                   /**删除储存的stash*/
git stash pop                    /**恢复储存的内容同时删除*/
git stash app stash@{0}          /**恢复指定的stash*/
git branch -D dev                /**删除还没合并的dev分支*/
git push origin dev              /**推送分支到远端分支*/
git checkout -b dev origin/dev   /**创建远程分支到本地*/
git pull                         /**先把最新的提交从远端抓取过来，在本地合并后再推送*/
git pull如果提示"no tracking information" 说明本地分支和远端分支的链接关系没有创建
git branch --set-upstream branch-name origin/branch-name  /**创建本地分支和远端分支的链接*/
git tag v1.0                     /**设置当前分支的标签*/
git tag                          /**查看标签*/
git tag v1.2 756e456             /**对版本为756e456的commit打标签v1.2*/
git show <tagname>               /**显示标签tagname的信息*/
git tag -a v1.2 -m "说明文字" 756e456    /**参数-a标签名，-m说明文字*/
git tag -d v1.2                  /**删除标签v1.2*/
git push origin v1.0             /**将标签推送到远端*/
git push origin --tags           /**一次性推送全部未推送的标签到远端*/
git push origin :refs/tags/<tagname>  /**删除远端标签*/
git config --global alias st status   /**配置别名，用st代替status*/
搭建git服务器    Git Cheat Sheet