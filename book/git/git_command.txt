1.git帮助页面
git help <verb>
git <verb> --help
man git-<verb>
2.获取命令帮助描述
git <verb> -h
3.初始化版本库
git init
4.克隆已存在版本库
git clone https://github.com/libgit2/libgit2
执行该命令会生成一个libgit2目录
git clone https://github.com/libgit2/libgit2 mylibgit
可以指定克隆后本地的目录名为mylibgit
SSH传输协议写法
user@server:path/to/repo.git 
5.查看当前文件状态
git status
git status -s（git status --short)简化状态输出
6.git add 命令
将文件加入版本控制git add file (如果后面跟的是路径，则递归添加路径下面的文件)
此时文件将处于暂存区，git add file 如果file已经受版本控制，则将file的修改加入暂存区
7.对比文件差异
git diff 此命令比较的是工作目录中当前文件和暂存区域快照之间的差异
git diff --staged 此命令比对已暂存文件与最后一次提交的文件差异
8.提交
git commit -m  '提交注释'   仅提交暂存区的代码
git commit -a -m '提交注释'   跳过使用暂存区提交
9.删除
git rm file
git rm --cached README (删除暂存区的文件，使不受git版本控制但保留本地)
10.改名
git mv file file.md
等价于
mv file  file.md
git rm file  
git add file.md
11.查看提交历史
git log
git log -p -2
git log --stat
git log --pretty=oneline
12.撤销操作
git commit -m 'the commit comtent'
git add forgotten_file
git commit --amend
13.暂存区多个文件，取消file.md保存到暂存区
git reset HEAD file.md
14.取消修改，在未暂存区中file.md
git checkout -- file.md
15.查看远程仓库
git remote
git remote -v
16.添加远程仓库
git remote add name http://github.com/paulboone/ticgit
17.获取远程仓库
git fetch <remote>
18.获取远程仓库并自动尝试合并到当前所在分支
git pull origin
19.将master推送到远程仓库
git push origin master
20.远程仓库重命名
git remote rename origin newname
21.移除远程仓库
git remote remove origin
22.显示标签
git tag
23.创建标签
git tag -a v1.0 -m "the describe tag"    带附注标签
git tag v1.1                          轻量标签
git show v1.1
24.为之前提交打标签
git log --pretty=oneline
git tag -a v1.2 9fceb02d0ae598e95dc970b74767f19372d61af8
25.推送标签到远程服务器
git push origin v1.1
git push origin --tags
26.删除本地标签
git tag -d v1.1
27.删除远程标签
git push origin --delete <tagname>
28.检出标签
git checkout v1.1
git checkout master
29.检出标签并创建一个新的分支
git checkout -b branchname v1.1